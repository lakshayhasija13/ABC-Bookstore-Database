Project: ABC Bookstore Database
Entity-Relationship Diagram (ERD):

1. Entities:

Customer
Book
Author
Category
Order
OrderItem

2. Relationships:

A Customer can place zero or more Orders.
An Order can have one or more OrderItems.
An OrderItem is associated with one Book.
A Book is written by one or more Authors and belongs to one Category.

3. Attributes:

Customer: customer_id (PK), name, email, phone
Book: book_id (PK), title, ISBN, price, quantity_in_stock
Author: author_id (PK), name, bio
Category: category_id (PK), name
Order: order_id (PK), customer_id (FK), order_date, total_price
OrderItem: order_item_id (PK), order_id (FK), book_id (FK), quantity, subtotal

SQL Tasks:

Create Tables:

Write SQL statements to create the necessary tables based on the ERD.

Insert Data:

Insert some sample data into each table to simulate a realistic scenario.

Query Tasks:

Retrieve a list of all books along with their authors.
Find the total sales for a specific customer.
List all customers who have not placed any orders.
Identify the top-selling books (based on quantity sold).
Calculate the revenue generated by each category.
Update the quantity_in_stock for a specific book after a new order.

Advanced Queries:

Find the customer who spent the most money.
Determine the best-selling author based on total book sales.
Identify customers who have placed orders for books in a specific category.

Modify Data:

Add a new book to the inventory.
Update the customer information.
Delete a specific order and its associated items.

Indexing:

Identify and create indexes on columns that are frequently used in search operations.

Views:

Create a view that shows the total sales for each month.

Stored Procedures:

Develop a stored procedure to calculate the total revenue for a given period.

Triggers:

Implement a trigger that updates the quantity_in_stock of a book after an order is placed.

Normalization:

Analyze the current table structures and normalize them if needed.

--------------------------------------------------------------------------------------
INPUT DATA :

Customer Table:

INSERT INTO Customer (customer_id, name, email, phone)
VALUES
    (1, 'John Doe', 'john.doe@email.com', '123-456-7890'),
    (2, 'Jane Smith', 'jane.smith@email.com', '987-654-3210'),
    (3, 'Bob Johnson', 'bob.johnson@email.com', '456-789-0123');
    
Author Table:
 
INSERT INTO Author (author_id, name, bio)
VALUES
    (1, 'Alice Author', 'Bestselling author with a passion for storytelling.'),
    (2, 'Bob Writer', 'Experienced writer with a focus on fiction.'),
    (3, 'Charlie Novelist', 'Award-winning novelist known for unique narratives.');

Category Table:
 
INSERT INTO Category (category_id, name)
VALUES
    (1, 'Fiction'),
    (2, 'Non-Fiction'),
    (3, 'Mystery'),
    (4, 'Science Fiction');
    
Book Table:
 
INSERT INTO Book (book_id, title, ISBN, price, quantity_in_stock, author_id, category_id)
VALUES
    (1, 'The Adventure Begins', 'ISBN123456', 19.99, 100, 1, 1),
    (2, 'Data Science 101', 'ISBN789012', 29.99, 75, 2, 2),
    (3, 'Murder Mystery', 'ISBN345678', 24.99, 50, 3, 3),
    (4, 'Galactic Odyssey', 'ISBN901234', 34.99, 120, 1, 4);
    
Order Table:
 
INSERT INTO Order (order_id, customer_id, order_date, total_price)
VALUES
    (1, 1, '2023-01-15', 59.98),
    (2, 2, '2023-02-20', 29.99),
    (3, 1, '2023-03-10', 69.98),
    (4, 3, '2023-04-05', 34.99);

OrderItem Table:
 
INSERT INTO OrderItem (order_item_id, order_id, book_id, quantity, subtotal)
VALUES
    (1, 1, 1, 2, 39.98),
    (2, 2, 2, 1, 29.99),
    (3, 3, 3, 3, 74.97),
    (4, 4, 4, 1, 34.99);
